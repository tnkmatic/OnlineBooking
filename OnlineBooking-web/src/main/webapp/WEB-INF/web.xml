<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	 version="3.1">
    <session-config>
        <session-timeout>
            30
        </session-timeout>
    </session-config>
    
    <!-- ======================================================================
     [Jerseyコンテナの設定]
        1. Jerseyがインターセプト後に処理を転送するリソースクラスが入っている
           パッケージの指定
           →WebコンテナはApplicationConfigのみで、リソースクラスがEJBコンテナのみに
            存在しても転送されるように
        
        2. "1" を設定すると、ApplicationConfig.javaの@ApplicationPathの設定が上書き
        　されてしまい、インターセプトするパスが無くなるため、<servlet-mapping>の設定が必要
          →Jerseyにインターセプトさせるパス

        ※なお、ApplicationConfig.javaに@ApplicationPathのアノテーションが
         付与されていると、[package path + ApplicationConfig] で、servlet-mapping
          が自動的に登録される(今回の場合 begining.restauth.service.ApplicationConfig)
          そのため、ApplicationConfig.javaに@ApplicationPathのアノテーションを
          記載したままにしてしまい、かつweb.xmlで、[package path + ApplicationConfig]
          以外の名前にしてしまうと、同一servlet-classに対する重複登録となってしまい
          コンテナ起動時にSEVEREでのエラーが出力される
          (ApplicationConfigに@ApplicationPathを付与しなければ、web.xmlに指定する
           servlet-nameは任意で良い)
    ======================================================================== -->
    
    <servlet>
        <!-- jerseyコンテナ初期パラメータ  -->
        <servlet-name>onlineBookingConfig</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>com.tnkmatic.onlinebooking.ejb.resource</param-value>
        </init-param>
        <init-param>
            <param-name>jersey.config.server.provider.scanning.recursive</param-name>
            <param-value>true</param-value>
        </init-param>
    </servlet>
    
    <servlet-mapping>
        <!-- jerseyコンテナにインターセプトさせるパス設定 -->
        <servlet-name>onlineBookingConfig</servlet-name>
        <url-pattern>/onlinebooking/*</url-pattern>
    </servlet-mapping>
    
    <!-- ログイン認証 -->
    <login-config>
        <auth-method>FORM</auth-method>
        <!-- 
            GlassFishのレルムに定義した名称 
            BASIC認証の場合は認証ダイアログの「領域」に表示される内容
        -->
        <realm-name>onlinebooking-realm</realm-name>
        <form-login-config>
            <form-login-page>/jsp/login/memberLogin.jsp</form-login-page>
            <form-error-page>/jsp/login/memberLoginError.jsp</form-error-page>
        </form-login-config>
    </login-config>

    <!-- Webリソースに対する認可  -->
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>onlinebooking</web-resource-name>
            <url-pattern>/jsp/mng/*</url-pattern>
            <url-pattern>/onlinebooking/*</url-pattern>
        </web-resource-collection>
        <auth-constraint>
            <role-name>administratorsRole</role-name>
            <role-name>studentsRole</role-name>
            <role-name>teachersRole</role-name>
        </auth-constraint>
    </security-constraint>
    
    <!-- 利用可能なロール名を定義 -->
    <security-role>
        <role-name>administratorsRole</role-name>
    </security-role>
    <security-role>
        <role-name>studentsRole</role-name>
    </security-role>
    <security-role>
        <role-name>teachersRole</role-name>
    </security-role>
</web-app>
